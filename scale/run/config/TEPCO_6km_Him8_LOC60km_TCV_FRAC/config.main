#!/bin/bash
#===============================================================================
#
#  Main settings for SCALE-LETKF scripts
#
#===============================================================================

PRESET='K_rankdir'                          # 'K' or 'K_rankdir' or 'K_micro'
PRESET='K_micro'                          # 'K' or 'K_rankdir' or 'K_micro'

#===============================================================================

UNAME=honda
#UNAME=stakino

# -- H08 --
# -- RTTOV_DIR --
DIR_RTTOV=/data/share025/honda/RTTOV
RTTOV_COEF=${DIR_RTTOV}/rtcoef_rttov11/rttov7pred54L/rtcoef_himawari_8_ahi.dat
RTTOV_SCCOEF=${DIR_RTTOV}/rtcoef_rttov11/cldaer/sccldcoef_himawari_8_ahi.dat


EXP="TEPCO_6km_Him8_LOC60km_TCV_FRAC"

DIR="$(cd "$(pwd)/.." && pwd)"              # Root directory of the SCALE-LETKF


DDIR="/volume64/data/ra001011/${UNAME}/SCALE-LETKF/scale-5.2.2"
OUTDIR="${DDIR}/OUTPUT/${EXP}" # Directory for SCALE-LETKF output

#===============================================================================
# Location of model/data files

SCALEDIR="$DIR/../.."                                                # Directory of the SCALE model
DATADIR="/volume64/data/ra001011/${UNAME}/SCALE-LETKF/database"        # Directory of the SCALE database

DATA_TOPO=                                                           # Directory of the prepared topo files
DATA_TOPO_BDY_SCALE="/volume64/data/ra001011/honda/SCALE-LETKF/scale-5.2.2/OUTPUT/TEPCO_18km_NoHim8_1127/const/topo"
DATA_LANDUSE=                                                        # Directory of the prepared landuse files


DATA_BDY_SCALE="/volume64/data/ra001011/honda/SCALE-LETKF/scale-5.2.2/OUTPUT/TEPCO_18km_NoHim8_1127"



DATA_BDY_SCALE_PREP=                                                 # Directory of the prepared SCALE boundary files
DATA_BDY_WRF="/volume64/data/ra001011/stakino/SCALE-LETKF/scale-5.1.5/OUTPUT/realtime_test/wrfbdy"
DATA_BDY_NICAM=                                                      # Directory of the boundary data in NICAM format (not finished)
DATA_BDY_GRADS=                                                      # Directory of the boundary data in GrADS format

#OBS="${DDIR}/obs/${EXP}"            # Directory of observation data in LETKF obs format

#OBS="/volume64/data/ra001011/honda/SCALE-LETKF/scale-5.2.2/obs/TEPCO_6km_Him8_TG04"
#OBS="/home/ra001011/a03465/SCALE-LETKF/scale-5.2.2/scale-5.2.2_20171102/scale-letkf.git/scale/run"
OBS="/volume64/data/ra001011/honda/SCALE-LETKF/scale-5.2.2/obs/tmp_JMA"

#"/volume64/data/ra001011/honda/SCALE-LETKF/scale-5.2.1/obs/TEPCO_4km_Him8_TG06"
OBSNCEP=                                                             # Directory of observation data in NCEP BUFR format

#===============================================================================
# model/data file options

PNETCDF=0               # 0: Do not use PnetCDF
                        # 1: Use PnetCDF

PNETCDF_BDY_SCALE=0     # Use PNETCDF I/O for the parent domain SCALE data? (default: $PNETCDF)
                        # 0: Do not use PnetCDF
                        # 1: Use PnetCDF

DET_RUN=1               # 0: Disable the deterministic run
                        # 1: Enable  the deterministic run

#TOPO_FORMAT='GTOPO30'   # 'prep': Use prepared topo files in $DATA_TOPO
TOPO_FORMAT='prep'   # 'prep': Use prepared topo files in $DATA_TOPO
                        # 'GTOPO30' (requires compatible 'config.nml.scale_pp')
                        # 'DEM50M'  (requires compatible 'config.nml.scale_pp')

#LANDUSE_FORMAT='GLCCv2' # 'prep': Use prepared landuse files in $DATA_LANDUSE
LANDUSE_FORMAT='prep' # 'prep': Use prepared landuse files in $DATA_LANDUSE
                        # 'GLCCv2' (requires compatible 'config.nml.scale_pp')
                        # 'LU100M' (requires compatible 'config.nml.scale_pp')
LANDUSE_UPDATE=0        # 0: Time-invariant landuse files
                        # 1: Time-variant landuse files


BDY_FORMAT=1            # 0: SCALE boundary files (with exactly same domain settings; do not need additional preprocessing)
                        # 1: SCALE history (requires compatible 'config.nml.scale_init')
                        # 2: WRF           (requires compatible 'config.nml.scale_init')
                        # 3: NICAM         (requires compatible 'config.nml.scale_init')
                        # 4: GrADS         (requires compatible 'config.nml.scale_init')
BDY_SINGLE_FILE=0       # 0: Length of a boundary file = $BDYCYCLE_INT (e.g., files made by data assimilation cycles)
                        # 1: Length of a boundary file is long enough so that only a single boundary file is used for each forecast


BDY_SCALE_DIR='hist'    # Directory name of the SCALE history files when $BDY_FORMAT = 1
#BDY_SCALE_DIR='fcst'    # Directory name of the SCALE history files when $BDY_FORMAT = 1


BDY_ENS=1               # 0: Fixed boundary files for all memebers
#BDY_ENS=0 # mean/mdet      # 0: Fixed boundary files for all memebers
                        # 1: Ensemble boundary files


BDY_ROTATING=0          # 0: Use a same series of boundary files for all initial time
                        # 1: Use different series of boundary files for different initial time

BDYINT=3600
BDYCYCLE_INT=21600
#BDYCYCLE_INT=86400
#BDYCYCLE_INT=172800

PARENT_REF_TIME=

ENABLE_PARAM_USER=1     # 0: Do not enable the 'PARAM_USER' section of the SCALE namelist
                        # 1: Enable the 'PARAM_USER' section of the SCALE namelist (require 'config.nml.scale_user' and customized version of SCALE)

OCEAN_INPUT=0           # 0: No ocean input (use cycling ocean variables)
                        # 1: Update the ocean variables every cycle
OCEAN_FORMAT=99         # 0: SCALE init files (with exactly same domain settings; do not need additional preprocessing)
                        # 99: From the same file as used in generating the boundary conditions ($BDY_FORMAT)
LAND_INPUT=0            # 0: No land input (use cycling land variables)
                        # 1: Update the land variables every cycle
LAND_FORMAT=99          # 0: SCALE init files (with exactly same domain settings; do not need additional preprocessing)
                        # 99: From the same file as used in generating the boundary conditions ($BDY_FORMAT)

OBSNUM=3
OBSNAME[1]=obs                                    
OBSNAME[2]=H08
OBSNAME[3]=vital

OBSNUM=1
OBSNAME[1]=jmarader

OBSOPE_SEPARATE[1]=0
OBSOPE_SEPARATE[2]=0
OBSOPE_SEPARATE[3]=0


#===============================================================================
# Cycling settings

WINDOW_S=600
WINDOW_E=600
LCYCLE=600
LTIMESLOT=600

#===============================================================================
# Parallelization settings

#MEMBER=50          # Ensemble size
MEMBER=6         # Ensemble size

#NNODES=1560        # Number of nodes
#NNODES=600        # Number of nodes
#NNODES=300        # Number of nodes
NNODES=480        # Number of nodes

#NNODES=60        # Number of nodes

PPN=1              # Number of processes per node

THREADS=8          # Number of threads per process

SCALE_NP=60        # Number of processes to run SCALE

BGJOB_INT='0.1s'   # Interval of multiple background job submissions

#===============================================================================
# Temporary directories to store runtime files

ONLINE_STGOUT=0             # Stage out right after each cycle (do not wait until the end of the job)?
                            #  0: No
                            #  1: Yes

SYSNAME="$(basename $OUTDIR)"                # A unique name in the machine
TMPSUBDIR="scale-letkf_${SYSNAME}"           # (used to identify multiple runs in the same time)

TMP="/scratch/$(id -ng)/${UNAME}/$TMPSUBDIR" # Temporary directory shared among all nodes
TMPS="$DIR/tmp/$TMPSUBDIR"  # Temporary directory only on the server node
#TMPL=

CLEAR_TMP=0                 # Clear temporary directories after the completion of job?
                            #  0: No
                            #  1: Yes

#===============================================================================
# Environmental settings

MPIRUN="mpiexec"
if (which $MPIRUN > /dev/null 2>&1); then
  MPIRUN=$(which $MPIRUN)
fi

SCP='cp -L'
SCP_HOSTPREFIX=''
#SCP="scp -q"
#SCP_HOSTPREFIX="XXXX:"

STAGE_THREAD=8
TAR_THREAD=8

PYTHON="python"

#BUFRBIN=

#===============================================================================
# Machine-independent source file

. config.rc

#===============================================================================
